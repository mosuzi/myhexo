<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[mosus]]></title>
    <url>%2Fblog%2Fmosus%2F</url>
    <content type="text"><![CDATA[]]></content>
  </entry>
  <entry>
    <title><![CDATA[正则表达式全集]]></title>
    <url>%2Fblog%2FreDoc%2F</url>
    <content type="text"><![CDATA[表达式全集 字符 描述 \ 将下一个字符标记为一个特殊字符、或一个原义字符、或一个向后引用、或一个八进制转义符。例如，“n”匹配字符“n”。“\n”匹配一个换行符。串行“\\”匹配“\”而“\(”则匹配“(”。 ^ 匹配输入字符串的开始位置。如果设置了RegExp对象的Multiline属性，^也匹配“\n”或“\r”之后的位置。 $ 匹配输入字符串的结束位置。如果设置了RegExp对象的Multiline属性，$也匹配“\n”或“\r”之前的位置。 * 匹配前面的子表达式零次或多次。例如，zo能匹配“z”以及“zoo”。等价于{0,}。 + 匹配前面的子表达式一次或多次。例如，“zo+”能匹配“zo”以及“zoo”，但不能匹配“z”。+等价于{1,}。 ? 匹配前面的子表达式零次或一次。例如，“do(es)?”可以匹配“does”或“does”中的“do”。?等价于{0,1}。 {n} n是一个非负整数。匹配确定的n次。例如，“o{2}”不能匹配“Bob”中的“o”，但是能匹配“food”中的两个o。 {n,} n是一个非负整数。至少匹配n次。例如，“o{2,}”不能匹配“Bob”中的“o”，但能匹配“foooood”中的所有o。“o{1,}”等价于“o+”。“o{0,}”则等价于“o*”。 {n,m} m和n均为非负整数，其中n&lt;=m。最少匹配n次且最多匹配m次。例如，“o{1,3}”将匹配“fooooood”中的前三个o。“o{0,1}”等价于“o?”。请注意在逗号和两个数之间不能有空格。 ? 当该字符紧跟在任何一个其他限制符（,+,?，{n}，{n,}，{n,m*}）后面时，匹配模式是非贪婪的。非贪婪模式尽可能少的匹配所搜索的字符串，而默认的贪婪模式则尽可能多的匹配所搜索的字符串。例如，对于字符串“oooo”，“o+?”将匹配单个“o”，而“o+”将匹配所有“o”。 . 匹配除“\n”之外的任何单个字符。要匹配包括“\n”在内的任何字符，请使用像“(.&amp;#124;\n)”的模式。 (pattern) 匹配pattern并获取这一匹配。所获取的匹配可以从产生的Matches集合得到，在VBScript中使用SubMatches集合，在JScript中则使用$0…$9属性。要匹配圆括号字符，请使用“\(”或“\)”。 (?:pattern) 匹配pattern但不获取匹配结果，也就是说这是一个非获取匹配，不进行存储供以后使用。这在使用或字符“(&amp;#124;)”来组合一个模式的各个部分是很有用。例如“industr(?:y&amp;#124;ies)”就是一个比“industry&amp;#124;industries”更简略的表达式。 (?=pattern) 正向肯定预查，在任何匹配pattern的字符串开始处匹配查找字符串。这是一个非获取匹配，也就是说，该匹配不需要获取供以后使用。例如，“Windows(?=95&amp;#124;98&amp;#124;NT&amp;#124;2000)”能匹配“Windows2000”中的“Windows”，但不能匹配“Windows3.1”中的“Windows”。预查不消耗字符，也就是说，在一个匹配发生后，在最后一次匹配之后立即开始下一次匹配的搜索，而不是从包含预查的字符之后开始。 (?!pattern) 正向否定预查，在任何不匹配pattern的字符串开始处匹配查找字符串。这是一个非获取匹配，也就是说，该匹配不需要获取供以后使用。例如“Windows(?!95&amp;#124;98&amp;#124;NT&amp;#124;2000)”能匹配“Windows3.1”中的“Windows”，但不能匹配“Windows2000”中的“Windows”。预查不消耗字符，也就是说，在一个匹配发生后，在最后一次匹配之后立即开始下一次匹配的搜索，而不是从包含预查的字符之后开始 (?&lt;=pattern) 反向肯定预查，与正向肯定预查类拟，只是方向相反。例如，“(?&lt;=95&amp;#124;98&amp;#124;NT&amp;#124;2000)Windows”能匹配“2000Windows”中的“Windows”，但不能匹配“3.1Windows”中的“Windows”。 (?&lt;!pattern) 反向否定预查，与正向否定预查类拟，只是方向相反。例如“(?&lt;!95&amp;#124;98&amp;#124;NT&amp;#124;2000)Windows”能匹配“3.1Windows”中的“Windows”，但不能匹配“2000Windows”中的“Windows”。 x&#124;y 匹配x或y。例如，“z&amp;#124;food”能匹配“z”或“food”。“(z&amp;#124;f)ood”则匹配“zood”或“food”。 [xyz] 字符集合。匹配所包含的任意一个字符。例如，“[abc]”可以匹配“plain”中的“a”。 xyz 负值字符集合。匹配未包含的任意字符。例如，“[^abc]”可以匹配“plain”中的“p”。 [a-z] 字符范围。匹配指定范围内的任意字符。例如，“[a-z]”可以匹配“a”到“z”范围内的任意小写字母字符。 a-z 负值字符范围。匹配任何不在指定范围内的任意字符。例如，“[^a-z]”可以匹配任何不在“a”到“z”范围内的任意字符。 \b 匹配一个单词边界，也就是指单词和空格间的位置。例如，“er\b”可以匹配“never”中的“er”，但不能匹配“verb”中的“er”。 \B 匹配非单词边界。“er\B”能匹配“verb”中的“er”，但不能匹配“never”中的“er”。 \cx 匹配由x指明的控制字符。例如，\cM匹配一个Control-M或回车符。x的值必须为A-Z或a-z之一。否则，将c视为一个原义的“c”字符。 \d 匹配一个数字字符。等价于[0-9]。 \D 匹配一个非数字字符。等价于0-9。 \f 匹配一个换页符。等价于\x0c和\cL。 \n 匹配一个换行符。等价于\x0a和\cJ。 \r 匹配一个回车符。等价于\x0d和\cM。 \s 匹配任何空白字符，包括空格、制表符、换页符等等。等价于[ \f\n\r\t\v]。 \S 匹配任何非空白字符。等价于 \f\n\r\t\v。 \t 匹配一个制表符。等价于\x09和\cI。 \v 匹配一个垂直制表符。等价于\x0b和\cK。 \w 匹配包括下划线的任何单词字符。等价于“[A-Za-z0-9_]”。 \W 匹配任何非单词字符。等价于“[^A-Za-z0-9_]”。 \xn 匹配n，其中n为十六进制转义值。十六进制转义值必须为确定的两个数字长。例如，“\x41”匹配“A”。“\x041”则等价于“\x04&amp;1”。正则表达式中可以使用ASCII编码。. *num* 匹配num，其中num是一个正整数。对所获取的匹配的引用。例如，“(.)\1”匹配两个连续的相同字符。 *n* 标识一个八进制转义值或一个向后引用。如果*n之前至少n个获取的子表达式，则n为向后引用。否则，如果n为八进制数字（0-7），则n*为一个八进制转义值。 *nm* 标识一个八进制转义值或一个向后引用。如果*nm之前至少有nm个获得子表达式，则nm为向后引用。如果\nm之前至少有n个获取，则n为一个后跟文字m的向后引用。如果前面的条件都不满足，若n和m均为八进制数字（0-7），则\nm将匹配八进制转义值nm*。 *nml* 如果n为八进制数字（0-3），且m和l均为八进制数字（0-7），则匹配八进制转义值nml。 \un 匹配n，其中n是一个用四个十六进制数字表示的Unicode字符。例如，\u00A9匹配版权符号（©）。 常用正则表达式 用户名 /^[a-z0-9_-]{3,16}$/ 密码 /^[a-z0-9_-]{6,18}$/ 十六进制值 /^#?([a-f0-9]{6}&#124;[a-f0-9]{3})$/ 电子邮箱 /^([a-z0-9_.-]+)@([\da-z.-]+).([a-z.]{2,6})$/ /^[a-z\d]+(.[a-z\d]+)*@(\da-z?)+(.{1,2}[a-z]+)+$/ URL /^(https?:\/\/)?([\da-z.-]+).([a-z.]{2,6})([\/\w .-])\/?$/ IP 地址 /((2[0-4]\d&#124;25[0-5]&#124;[01]?\d\d?).){3}(2[0-4]\d&#124;25[0-5]&#124;[01]?\d\d?)/ /^(?:(?:25[0-5]&#124;2[0-4][0-9]&#124;[01]?[0-9][0-9]?).){3}(?:25[0-5]&#124;2[0-4][0-9]&#124;[01]?[0-9][0-9]?)$/ HTML 标签 /^&lt;([a-z]+)(]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>正则</tag>
        <tag>re</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Connection reset by ip port 22 解决办法]]></title>
    <url>%2Fblog%2FconnectionReset22%2F</url>
    <content type="text"><![CDATA[昨天才在服务器上搭好的博客，今天更新一下头像就又git失败了，还报出了Connection reset by [ip] port 22这种错误，相当头疼。 connection reset by [ip] port 22首先遇到问题先百度，可惜搜到的结果都是以下这个： 12rm /etc/ssh/ssh_host_*sudo dpkg-reconfigure openssh-server 第一句好理解，大概就是把/etc/ssh文件夹里的那些生成密钥文件删掉，然后第二句重置ssh But，当我壮着胆子执行第二句的时候，直接报dpkg-reconfigure命令不存在，只好先安装这个命令 1sudo yum install debconf 然后继续执行第二句，提示： openssh-server 未安装 What? 别把我当健忘啊，我昨天才安装的，果断查看 1ssh -V 发现确实安装了openssh-server，但dgpk-reconfigure就是找不到。陷入小恐惧中。密钥文件没了可咋整。还好我及时找到了解决办法，不就是重置ssh嘛，其实也就是重新生成密钥文件，如下 12sudo ssh-keygen -Aservice start sshd # 重启ssh服务 到此，刚才的小恐惧算是没了，毕竟密钥文件回来了。不过已经不再是原来的了，所以想直接重新连接那是不太可能滴，会报类似如下的Host ket verification failed错误 12345678910111213141516@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED! @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@IT IS POSSIBLE THAT SOMEONE IS DOING SOMETHING NASTY!Someone could be eavesdropping on you right now (man-in-the-middle attack)!It is also possible that a host key has just been changed.The fingerprint for the ECDSA key sent by the remote host is[fingerprint].Please contact your system administrator.Add correct host key in /home/orion/.ssh/known_hosts to get rid of this message.Offending ECDSA key in /home/orion/.ssh/known_hosts:2 remove with: ssh-keygen -f &quot;/home/orion/.ssh/known_hosts&quot; -R [ip]ECDSA host key for [ip] has changed and you have requested strict checking.Host key verification failed. 其实就是本机知道的密钥信息和远程的不一致导致的警告 如其中的建议一样，只需找到本机的.ssh/known_hosts中的对应ip和密钥就可以，之后重连会提示是否要保存远程信息，并连接成功（其实我最后这一步试了两次） 以上，由Connection reset by ip port 22引发的问题就解决了，不过不知道明天还会不会再出什么幺蛾子，但愿没有。]]></content>
      <categories>
        <category>博客</category>
      </categories>
      <tags>
        <tag>博客</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[markdown用法]]></title>
    <url>%2Fblog%2Fhow2useMD%2F</url>
    <content type="text"><![CDATA[markdown用法功能快捷键 撤销：Ctrl/Command + Z 重做：Ctrl/Command + Y 加粗：Ctrl/Command + B 斜体：Ctrl/Command + I 标题：Ctrl/Command + Shift + H 无序列表：Ctrl/Command + Shift + U 有序列表：Ctrl/Command + Shift + O 检查列表：Ctrl/Command + Shift + C 插入代码：Ctrl/Command + Shift + K 插入链接：Ctrl/Command + Shift + L 插入图片：Ctrl/Command + Shift + G 文本样式 ① 斜体；② 斜体； ① 加粗；② 加粗； ==高亮文本== 删除文本 引用文本 H~2~O是液体 2^10^运算结果是1024 自定义颜色 列表Part-01 项目一 项目A 项目a 项目二 项目B 项目b 项目三 项目C 项目c 项目四 项目D 项目d Part-02 项目1 项目2 项目3 Part-03 [ ] 计划任务 [x] 完成任务 代码块这里展示语法高亮 123# 此处展示代码块if __name__ == "__main__"": pass 表格 项目 Value 电脑 $1600 手机 $12 导管 $1 Column 1 Column 2 Column 3 left-aligned 文本居左 centered 文本居中 right-aligned 文本居右 SmartyPantsSmartyPants将ASCII标点字符转换为“智能”印刷标点HTML实体。例如： TYPE ASCII HTML Single backticks &#39;Isn&#39;t this fun?&#39; ‘Isn’t this fun?’ Quotes &quot;Isn&#39;t this fun?&quot; “Isn’t this fun?” Dashes -- is en-dash, --- is em-dash — is en-dash, —- is em-dash 脚注一个具有脚注的文本A。1一个具有脚注的文本B。2 1. 解释A。 &#8617; 2. 解释B。 &#8617; 注释Markdown将文本转换为HTML。*[HTML]: 超文本标记语言 甘特图gantt dateFormat YYYY-MM-DD title Adding GANTT diagram functionality to mermaid section 现有任务 已完成: done, des1, 2014-01-06, 2014-01-08 进行中: active, des2, 2014-01-09,3d 计划中: des3, after des2, 5d 代码 1234567gantt dateFormat YYYY-MM-DD title Adding GANTT diagram functionality to mermaid section 现有任务 已完成: done, des1, 2014-01-06, 2014-01-08 进行中: active, des2, 2014-01-09,3d 计划中: des3, after des2, 5d 公式Gamma公式展示 $\Gamma(n) = (n-1)!\quad\forall n\in\mathbb N$ \Gamma(z) = \int_0^\infty t^{z-1}e^{-t}dt\,$\Sigma(x) = \lim^{x \to -\infty}_{y \to 0}{\frac{x}{y}}$ 代码 12345$\Gamma(n) = (n-1)!\quad\forall n\in\mathbb N$$$\Gamma(z) = \int_0^\infty t^&#123;z-1&#125;e^&#123;-t&#125;dt\,$$$\Sigma(x) = \lim^&#123;x \to -\infty&#125;_&#123;y \to 0&#125;&#123;\frac&#123;x&#125;&#123;y&#125;&#125;$ mermaid时序图sequenceDiagram 张三 ->> 李四: 你好！李四, 最近怎么样？ 李四 -->> 王五: 你最近怎么样，王五？ 李四 --x 张三: 我很好，谢谢！ 李四 -x 王五: 我很好，谢谢！ Note right of 王五: 李四想了很长时间, 文字太长了不适合放在一行。 李四 -->> 张三: 打量着王五... 张三 ->> 王五: 很好... 王五, 你怎么样？ 代码 12345678sequenceDiagram张三 -&gt;&gt; 李四: 你好！李四, 最近怎么样？李四 --&gt;&gt; 王五: 你最近怎么样，王五？李四 --x 张三: 我很好，谢谢！李四 -x 王五: 我很好，谢谢！Note right of 王五: 李四想了很长时间, &lt;br/&gt;文字太长了不适合放&lt;br/&gt;在一行。李四 --&gt;&gt; 张三: 打量着王五...张三 -&gt;&gt; 王五: 很好... 王五, 你怎么样？ mermaid流程图graph LR A[长方形] -- 链接 --> B((圆)) A --> C(圆角长方形) B --> D{菱形} C --> D 代码 12345graph LRA[长方形] -- 链接 --&gt; B((圆))A --&gt; C(圆角长方形)B --&gt; D&#123;菱形&#125;C --&gt; D flow 流程图 代码 123456789flowchartst=&gt;start: 开始e=&gt;end: 结束op=&gt;operation: 我的操作cond=&gt;condition: 确认？st-&gt;op-&gt;condcond(yes)-&gt;econd(no)-&gt;op sequence序列图实例 代码 1234A-&gt;B:helloB-&gt;C:A says hello to me!C-&gt;C:emmmmm....C--&gt;A:wow, that`s wonderful flowchart st=>start: 开始 e=>end: 结束 op=>operation: 我的操作 cond=>condition: 确认？ st->op->cond cond(yes)->e cond(no)->op{"theme":"simple","scale":1,"line-width":2,"line-length":50,"text-margin":10,"font-size":12} var code = document.getElementById("flowchart-0-code").value; var options = JSON.parse(decodeURIComponent(document.getElementById("flowchart-0-options").value)); var diagram = flowchart.parse(code); diagram.drawSVG("flowchart-0", options);A->B:hello B->C:A says hello to me! C->C:emmmmm.... C-->A:wow, that`s wonderful{"theme":"simple","scale":1,"line-width":2,"line-length":50,"text-margin":10,"font-size":12} var code = document.getElementById("sequence-0-code").value; var options = JSON.parse(decodeURIComponent(document.getElementById("sequence-0-options").value)); var diagram = Diagram.parse(code); diagram.drawSVG("sequence-0", options);]]></content>
      <categories>
        <category>其他</category>
      </categories>
      <tags>
        <tag>markdown</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[oracle初步语法示例]]></title>
    <url>%2Fblog%2ForacleSimple%2F</url>
    <content type="text"><![CDATA[oracle初步语法示例基本语句1234select e.*, j.* from emp e, jobs j where e.jid = j.jid(+); -- (+)的存在表示该表值可为空update emp set id = 101 where name like '_k%';delete from emp where id in (101, 100);insert into emp(id, name) values(101, 'kkk'); 单行函数123456789decode(col, case1, result1, case2, result2, default);sign(); -- 判断col的值，为正返回1，为负返回-1，为0返回0to_date(a_date, 'DD-MON-YY','nls_date_language=american');to_char('date string', 'YYYY-MM-DD');nvl(col, default); -- 当col为空时，返回defaultlag(kid, i, null) over (order by eid); -- 以eid为顺序查询上i条kid记录leap(kid, i, null) over (order by eid); -- 以eid为顺序查询下i条Kid记录extract(month from a_date); -- 拆分日期，首参数可选month,year,day等months_between(now_date, last_date); -- 得到last_date到now_date的月份数，/12得到年份数，float 多行函数1234567891011count();sum();avg();max();min();-- 示例select count(*)from empwhere emp.id = 100group by emp.did;-- count不一定需要group,但是当查询列多于count时，需要group 其他查询固定条数，类似mysql的limit123select * from (select * from emp order by eid) awhere rownum between 2 and 6; 生成树状结构123select e.employee_id, e.manager_id, level, lpad(e.last_name, length(e.last_name) + (level - 1 )* 2,'_') last_namefrom employees econnect by prior e.manager_id = e.employee_id; 多次匹配1where REGEXP_LIKE(last_name, 'K|J|L|M'); with语法123456789101112-- 可以用with暂存一个子查询，方便多次调用with MAX_SAL_CALC as (select e.job_id, max(salary) ms from employees e group by e.job_id order by ms desc)select j.job_title, m.ms job_totalfrom jobs j, MAX_SAL_CALC mwhere j.job_id = m.job_idand m.ms &gt; (select ma.ms from MAX_SAL_CALC ma where rownum &lt; 2) / 2; 安装oracle-XE遇到的问题：1628，基于脚本的安装失败原因：oracle卸载不完全 清理注册表中Oracle项并重启即可]]></content>
      <categories>
        <category>其他</category>
      </categories>
      <tags>
        <tag>Oracle</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2Fblog%2F16107%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
